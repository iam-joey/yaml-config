# yaml-language-server: $schema=https://storage.googleapis.com/coderabbit_public_assets/schema.v2.json
language: en-US
early_access: false
enable_free_tier: true
reviews:
  profile: chill
  request_changes_workflow: false
  high_level_summary: false
  high_level_summary_placeholder: "@coderabbitai summary"
  high_level_summary_in_walkthrough: false
  auto_title_placeholder: "@coderabbitai"
  auto_title_instructions: ""
  review_status: true
  commit_status: true
  fail_commit_status: false
  collapse_walkthrough: false
  changed_files_summary: true
  sequence_diagrams: true
  assess_linked_issues: true
  related_issues: true
  related_prs: true
  suggested_labels: true
  auto_apply_labels: false
  suggested_reviewers: true
  poem: true
  abort_on_close: true
  path_instructions:
    - path: "src/components/**/**.*"
      instructions: |
        Review the frontend components to ensure they follow security and performance best practices. Check for:
         - Remove any `console.log`, `console.warn`, or `console.error` statements in production.
         - Avoid memory leaks by ensuring proper cleanup of event listeners, intervals, or timeouts.
         - Ensure secure handling of props, avoiding direct injection of user input into TSX without sanitization.
         - Avoid inline styles with dynamic values that could lead to XSS vulnerabilities.
    - path: "src/pages/api/**/**.*"
      instructions: |
        Review the API route files to ensure security best practices. Check for:
        - Avoid exposing sensitive environment variables directly in API responses.
        - Ensure all API endpoints have proper authentication and authorization checks.
        - Avoid hardcoding API keys or secrets inside the source code.
        - Validate all incoming user input to prevent injection attacks (e.g., SQL/NoSQL injection, XSS).
        - Use `try/catch` blocks for proper error handling and avoid leaking sensitive error messages.
    - path: "**/*.ts"
      instructions: |
        Perform a global security review of all TypeScript files. Check for:
         - Avoid using `any` type, as it can lead to runtime errors and security vulnerabilities.
         - Remove all `console.log` statements
         - Ensure all async functions properly handle errors using `try/catch`
    - path: "src/pages/**/**/**.tsx"
      instructions: |
        Review the frontend pages to ensure they follow security and performance best practices. Check for:
         - Remove any `console.log`, `console.warn`, or `console.error` statements .
         - Avoid memory leaks by ensuring proper cleanup of event listeners, intervals, or timeouts.
         - Ensure secure handling of props, avoiding direct injection of user input into TSX without sanitization.
         - Avoid inline styles with dynamic values that could lead to XSS vulnerabilities.
  auto_review:
    enabled: true
    auto_incremental_review: true
    drafts: false
    base_branches:
      - ".*" # this is set to all branches, so whoever raises a PR it will generates a review for them
  tools:
    github-checks:
      enabled: true
      timeout_ms: 90000
    languagetool:
      enabled: true
      enabled_only: false
      level: default
    ast-grep:
      essential_rules: true
    golangci-lint:
      enabled: true
    phpstan:
      enabled: true
      level: default
    swiftlint:
      enabled: true
    detekt:
      enabled: true
    pmd:
      enabled: true
    semgrep:
      enabled: true
    shellcheck:
      enabled: true
    ruff:
      enabled: true
    markdownlint:
      enabled: true
    biome:
      enabled: true
    hadolint:
      enabled: true
    yamllint:
      enabled: true
    gitleaks:
      enabled: true

    checkov:
      enabled: true
    eslint:
      enabled: true
    rubocop:
      enabled: true
    buf:
      enabled: true
    regal:
      enabled: true
    actionlint:
      enabled: true
    cppcheck:
      enabled: true
    circleci:
      enabled: true
  finishing_touches:
    docstrings:
      enabled: true
chat:
  auto_reply: true

knowledge_base:
  opt_out: false
  web_search:
    enabled: true
  learnings:
    scope: auto
  issues:
    scope: auto
  pull_requests:
    scope: auto
